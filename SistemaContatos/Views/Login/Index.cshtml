@model LoginModel
@{
	Layout = "_LayoutOffLine";
	ViewData["Title"] = "Login";
}


<div id="content-aside-text-login">
	<h1>Intersec Solutions</h1>
	<p>
		Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has
		been the industry's standard dummy text ever since the 1500s, when an unknown printer took
		a galley of type and scrambled it to make a type specimen book.
	</p>
</div>

<div class="login-container">
	<div class="login-form">
		<form asp-controller="Login" asp-action="Login" method="post">
			<div class="mb-3">
				<label for="login" class="form-label">Usuário</label>
				<input type="text" asp-for="_Login" class="form-control" id="login">
				@Html.ValidationMessageFor(x => x._Login)

				<label for="senha" class="form-label">Senha</label>
				<input type="password" asp-for="_Password" class="form-control" id="senha">
				@Html.ValidationMessageFor(x => x._Password)
			</div>
				<button id="btn-login-entry" type="submit" class="btn btn-secondary">Entrar</button>
				<a class="RecoveryPassword" asp-action="RecoveryPassword" asp-controller="Login">Esqueceu sua senha?</a>
		</form>
	</div>
</div>
@if (TempData["ErrorMessage"] != null)
{
	<div class="alert alert-danger" role="alert">
		<button type="button" class="btn btn-danger btn-sm close-alert" arial-lable="Close" hidden>X</button>
		@TempData["ErrorMessage"]
	</div>

}

@if (TempData["SuccessMessage"] != null)
{
	<div class="alert alert-success" role="alert">
		<button type="button" class="btn btn-danger btn-sm close-alert" arial-lable="Close" hidden>X</button>
		@TempData["SuccessMessage"]
	</div>

}
